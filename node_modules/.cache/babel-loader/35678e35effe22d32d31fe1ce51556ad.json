{"ast":null,"code":"var _jsxFileName = \"/Users/adrian/Downloads/ProyectoWeb/diidxaza-app/src/pages/Login.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Button, Form, Grid, Header, Image, Message, Segment, Loader } from 'semantic-ui-react'; // import validateInput from '../validators/login';\n// import { loginUser } from '../store/actions/auth';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      errors: {},\n      isLoading: false\n    };\n  } //   componentDidMount() {\n  //     if (this.props.user.isAuthenticated) {\n  //       this.props.history.push('/');\n  //     }\n  //   }\n  //   componentWillReceiveProps(nextProps) {\n  //     if (nextProps.user && nextProps.user.isAuthenticated) {\n  //       this.props.history.push('/');\n  //     }\n  //     if (nextProps.errors) {\n  //       this.setState({\n  //         errors: nextProps.errors,\n  //         isLoading: false\n  //       });\n  //     }\n  //   }\n  //   onSubmit = (e) => {\n  //     e.preventDefault();\n  //     if (this.isValid()) {\n  //       this.setState({ errors: {}, isLoading: true });\n  //       this.props.loginUser(this.state, this.props.history);\n  //     }\n  //   }\n  //   onChange = (e) => {\n  //     this.setState({ [e.target.name]: e.target.value });\n  //   }\n  //   isValid = () => {\n  //     const { errors, isValid } = validateInput(this.state);\n  //     if (!isValid) {\n  //       this.setState({ errors });\n  //     }\n  //     return isValid;\n  //   }\n\n\n  render() {\n    const {\n      errors,\n      email,\n      password,\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        textAlign: \"center\",\n        style: {\n          height: '100%'\n        },\n        verticalAlign: \"middle\",\n        children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n          style: {\n            maxWidth: 450\n          },\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              src: \"/assets/images/logo.png\",\n              size: \"tiny\",\n              centered: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Header, {\n            as: \"h2\",\n            color: \"teal\",\n            textAlign: \"center\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            size: \"large\",\n            onSubmit: this.onSubmit,\n            error: errors.loginError ? true : false,\n            autoComplete: \"off\",\n            children: /*#__PURE__*/_jsxDEV(Segment, {\n              stacked: true,\n              children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n                fluid: true,\n                icon: \"user\",\n                iconPosition: \"left\",\n                name: \"email\",\n                placeholder: \"E-mail\",\n                defaultValue: email,\n                error: errors.email ? true : false,\n                onChange: this.onChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n                fluid: true,\n                icon: \"lock\",\n                iconPosition: \"left\",\n                name: \"password\",\n                placeholder: \"Password\",\n                type: \"password\",\n                defaultValue: password,\n                error: errors.password ? true : false,\n                onChange: this.onChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Message, {\n                error: true,\n                content: errors.loginError\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"teal\",\n                fluid: true,\n                size: \"large\",\n                disabled: isLoading,\n                children: !isLoading ? 'Login' : /*#__PURE__*/_jsxDEV(Loader, {\n                  active: true,\n                  inverted: true,\n                  inline: true,\n                  size: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Message, {\n            children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/sign-up\",\n              children: \"Sign up!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nLoginForm.propTypes = {\n  errors: PropTypes.object.isRequired\n}; // const mapStateToProps = state => ({\n//   user: state.user,\n//   errors: state.errors\n// })\n// export default connect(mapStateToProps, { loginUser })(LoginForm)\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/adrian/Downloads/ProyectoWeb/diidxaza-app/src/pages/Login.js"],"names":["React","Component","Link","connect","PropTypes","Button","Form","Grid","Header","Image","Message","Segment","Loader","Login","constructor","props","state","email","password","errors","isLoading","render","height","maxWidth","onSubmit","loginError","onChange","LoginForm","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Button, Form, Grid, Header, Image, Message, Segment,Loader } from 'semantic-ui-react'\n\n// import validateInput from '../validators/login';\n// import { loginUser } from '../store/actions/auth';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      errors: {},\n      isLoading: false\n    };\n  }\n\n//   componentDidMount() {\n//     if (this.props.user.isAuthenticated) {\n//       this.props.history.push('/');\n//     }\n//   }\n\n//   componentWillReceiveProps(nextProps) {\n//     if (nextProps.user && nextProps.user.isAuthenticated) {\n//       this.props.history.push('/');\n//     }\n//     if (nextProps.errors) {\n//       this.setState({\n//         errors: nextProps.errors,\n//         isLoading: false\n//       });\n//     }\n//   }\n\n//   onSubmit = (e) => {\n//     e.preventDefault();\n//     if (this.isValid()) {\n//       this.setState({ errors: {}, isLoading: true });\n//       this.props.loginUser(this.state, this.props.history);\n//     }\n//   }\n\n//   onChange = (e) => {\n//     this.setState({ [e.target.name]: e.target.value });\n//   }\n\n//   isValid = () => {\n//     const { errors, isValid } = validateInput(this.state);\n//     if (!isValid) {\n//       this.setState({ errors });\n//     }\n//     return isValid;\n//   }\n\n  render() {\n    const { errors, email, password, isLoading } = this.state;\n\n    return (\n      <div className='login-form'>\n        <Grid textAlign='center' style={{ height: '100%' }} verticalAlign='middle'>\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <Link to='/'>\n              <Image src='/assets/images/logo.png' size='tiny' centered />\n            </Link>\n\n            <Header as='h2' color='teal' textAlign='center'>\n              Login\n            </Header>\n            <Form size='large'\n              onSubmit={this.onSubmit}\n              error={errors.loginError ? true : false}\n              autoComplete='off'\n            >\n              <Segment stacked>\n                <Form.Input\n                  fluid icon='user'\n                  iconPosition='left'\n                  name='email'\n                  placeholder='E-mail'\n                  defaultValue={email}\n                  error={errors.email ? true : false}\n                  onChange={this.onChange}\n                />\n                <Form.Input\n                  fluid icon='lock'\n                  iconPosition='left'\n                  name='password'\n                  placeholder='Password'\n                  type='password'\n                  defaultValue={password}\n                  error={errors.password ? true : false}\n                  onChange={this.onChange}\n                />\n\n                <Message error content={errors.loginError} />\n\n                <Button color='teal' fluid size='large' disabled={isLoading}>\n                  {!isLoading\n                    ? 'Login'\n                    : <Loader active inverted inline size='small' />\n                  }\n                </Button>\n              </Segment>\n            </Form>\n            <Message>\n              Don't have an account? <Link to='/sign-up'>Sign up!</Link>\n            </Message>\n          </Grid.Column>\n        </Grid>\n      </div>\n    )\n  }\n}\n\nLoginForm.propTypes = {\n  errors: PropTypes.object.isRequired\n}\n\n// const mapStateToProps = state => ({\n//   user: state.user,\n//   errors: state.errors\n// })\n\n// export default connect(mapStateToProps, { loginUser })(LoginForm)\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}