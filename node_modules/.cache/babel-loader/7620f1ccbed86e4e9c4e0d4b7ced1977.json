{"ast":null,"code":"var _jsxFileName = \"/home/abstract/Descargas/dev/src/pages/InitialInteraction/Login/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './login.scss';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from \"react-i18next\";\nimport \"../../../translations/i18n\";\nimport { Link } from 'react-router-dom';\nimport DiidxazaLogo from '../../../components/logo/DiidxazaLogo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nasync function loginUser(credentials) {\n  return fetch('http://localhost:8080/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(credentials)\n  }).then(data => data.json());\n}\n\nexport default function Login({\n  setToken\n}) {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const [username, setUserName] = useState();\n  const [password, setPassword] = useState();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const token = await loginUser({\n      username,\n      password\n    });\n    setToken(token);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-main-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(Login, \"uZnmX+L4SQ+1yO23dBvNumCBtkU=\", false, function () {\n  return [useTranslation];\n});\n\n_c = Login;\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/abstract/Descargas/dev/src/pages/InitialInteraction/Login/Login.jsx"],"names":["React","useState","PropTypes","useTranslation","Link","DiidxazaLogo","loginUser","credentials","fetch","method","headers","body","JSON","stringify","then","data","json","Login","setToken","t","username","setUserName","password","setPassword","handleSubmit","e","preventDefault","token","propTypes","func","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,cAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAO,4BAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;;;AAGA,eAAeC,SAAf,CAAyBC,WAAzB,EAAsC;AACpC,SAAOC,KAAK,CAAC,6BAAD,EAAgC;AAC1CC,IAAAA,MAAM,EAAE,MADkC;AAE1CC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFiC;AAK1CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,WAAf;AALoC,GAAhC,CAAL,CAOJO,IAPI,CAOCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAPT,CAAP;AAQD;;AAED,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAA6B;AAAA;;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAAQhB,cAAc,EAA5B;AACA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,EAAxC;AACA,QAAM,CAACqB,QAAD,EAAWC,WAAX,IAA0BtB,QAAQ,EAAxC;;AAGA,QAAMuB,YAAY,GAAG,MAAMC,CAAN,IAAW;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,KAAK,GAAG,MAAMrB,SAAS,CAAC;AAC5Bc,MAAAA,QAD4B;AAE5BE,MAAAA;AAF4B,KAAD,CAA7B;AAIAJ,IAAAA,QAAQ,CAACS,KAAD,CAAR;AACD,GAPD;;AASA,sBACE;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AASD;;GAxBuBV,K;UACRd,c;;;KADQc,K;AA0BxBA,KAAK,CAACW,SAAN,GAAkB;AAChBV,EAAAA,QAAQ,EAAEhB,SAAS,CAAC2B,IAAV,CAAeC;AADT,CAAlB","sourcesContent":["import React, { useState } from 'react';\nimport './login.scss'\nimport PropTypes from 'prop-types';\nimport { useTranslation } from \"react-i18next\";\nimport \"../../../translations/i18n\";\nimport { Link } from 'react-router-dom'\nimport DiidxazaLogo from '../../../components/logo/DiidxazaLogo'\n\n\nasync function loginUser(credentials) {\n  return fetch('http://localhost:8080/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(credentials)\n  })\n    .then(data => data.json())\n}\n\nexport default function Login({ setToken }) {\n  const { t } = useTranslation();\n  const [username, setUserName] = useState();\n  const [password, setPassword] = useState();\n\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const token = await loginUser({\n      username,\n      password\n    });\n    setToken(token);\n  }\n\n  return (\n    <>\n    <div className=\"login-main-container\">\n      \n\n    </div>\n    </>\n\n  )\n}\n\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n}\n"]},"metadata":{},"sourceType":"module"}